// <auto-generated />
using System;
using EmployeeArrivalTrackerDataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeArrivalTrackerDataAccess.Migrations
{
    [DbContext(typeof(EmployeeArrivalContext))]
    [Migration("20220518152657_Third")]
    partial class Third
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EmployeeArrivalTrackerDataAccess.Data.EmployeeArrivalTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("When")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeArrivalTable");
                });

            modelBuilder.Entity("EmployeeArrivalTrackerDataAccess.Data.EmployeeTeamsNomenclatureTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EmployeesTableId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsNomenclatureTableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeesTableId");

                    b.HasIndex("TeamsNomenclatureTableId");

                    b.ToTable("EmployeeTeamsNomenclatureTables");
                });

            modelBuilder.Entity("EmployeeArrivalTrackerDataAccess.Data.EmployeesTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolesNomenclatureTableId")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RolesNomenclatureTableId");

                    b.ToTable("EmployeesTables");
                });

            modelBuilder.Entity("EmployeeArrivalTrackerDataAccess.Data.RolesNomenclatureTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RolesNomenclatureTables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Junior Developer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Semi Senior Developer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Senior Developer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Principal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Team Leader"
                        });
                });

            modelBuilder.Entity("EmployeeArrivalTrackerDataAccess.Data.TeamsNomenclatureTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeamsNomenclatureTables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Platform"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Billing"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mirage"
                        });
                });

            modelBuilder.Entity("EmployeeArrivalTrackerDataAccess.Data.TokenTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TokenTables");
                });

            modelBuilder.Entity("EmployeesTableTeamsNomenclatureTable", b =>
                {
                    b.Property<int>("EmployeesTablesId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesTablesId", "TeamsId");

                    b.HasIndex("TeamsId");

                    b.ToTable("EmployeesTableTeamsNomenclatureTable");
                });

            modelBuilder.Entity("EmployeeArrivalTrackerDataAccess.Data.EmployeeTeamsNomenclatureTable", b =>
                {
                    b.HasOne("EmployeeArrivalTrackerDataAccess.Data.EmployeesTable", "EmployeesTable")
                        .WithMany()
                        .HasForeignKey("EmployeesTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeArrivalTrackerDataAccess.Data.TeamsNomenclatureTable", "TeamsNomenclatureTable")
                        .WithMany()
                        .HasForeignKey("TeamsNomenclatureTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeesTable");

                    b.Navigation("TeamsNomenclatureTable");
                });

            modelBuilder.Entity("EmployeeArrivalTrackerDataAccess.Data.EmployeesTable", b =>
                {
                    b.HasOne("EmployeeArrivalTrackerDataAccess.Data.RolesNomenclatureTable", "Role")
                        .WithMany()
                        .HasForeignKey("RolesNomenclatureTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EmployeesTableTeamsNomenclatureTable", b =>
                {
                    b.HasOne("EmployeeArrivalTrackerDataAccess.Data.EmployeesTable", null)
                        .WithMany()
                        .HasForeignKey("EmployeesTablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeArrivalTrackerDataAccess.Data.TeamsNomenclatureTable", null)
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
